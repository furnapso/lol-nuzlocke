name: release-dist
on:
  push:
    branches:
      - release

jobs:
  dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: actions/setup-node@v3
        with:
          node-version: "19.8.1"
      - run: pip install poetry==1.4.0
      - run: mkdir dist
      - run: poetry export --without-hashes --format=requirements.txt > requirements.txt
        working-directory: backend
      - run: |
          npm install
          npm run build
        working-directory: frontend
      - run: |
          cp -r backend/src dist/backend
          cp -r frontend/dist dist/frontend
          tar -czvf release.tar.gz dist
      - uses: actions/upload-artifact@v3
        with:
          name: release-${{ github.run_number }}.tar.gz
          path: release.tar.gz
          if-no-files-found: error
      - run: git tag release-${{ github.run_number }} && git push origin
