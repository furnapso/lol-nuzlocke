name: release-build
on:
  push:
    branches:
      - release
  workflow_dispatch:

env:
  RELEASE_VER: release-${{github.run_number}}
  DOCKER_IMAGE_NAME: lol-nuzlocke-release-${{github.run_number}}

jobs:
  dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - uses: actions/setup-node@v3
        with:
          node-version: "19.8.1"
      - run: pip install poetry==1.4.0
      - run: mkdir dist
      - run: poetry export --without-hashes --format=requirements.txt > requirements.txt
        working-directory: backend
      - run: |
          npm install
          npm run build
        working-directory: frontend
      - run: |
          cp -r backend/src/lol_nuzlocke_backend/* dist
          cp -r frontend/dist dist/frontend
          docker build -t ${{env.DOCKER_IMAGE_NAME}} .
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DOCKER_IMAGE_NAME }}
          path: /var/lib/docker/${{env.DOCKER_IMAGE_NAME}}
          if-no-files-found: error
      - run: |
          git config --global user.name "Github Actions"
          git config --global user.email "noreply@github.com"
          git tag ${{ env.RELEASE_VER }}
          git push origin ${{ env.RELEASE_VER }}

  merge-release-to-main:
    runs-on: ubuntu-latest
    needs: dist
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
      - run: |
          git fetch --unshallow
          git switch main
          git merge origin/release
          git push
